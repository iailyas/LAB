
  command: 'microdnf install iproute'
version: '3'
services:
  voting:
    build: ./dkr-30
    restart: unless-stopped
    ports:
      - '8002:8002'
    volumes:
      - './dkr-30/:/app'
    environment:
       - 'APP_NAME=VoteApp'
       - 'APP_ENV=production'
       - 'APP_KEY=base64:WcIFQQUYOUUH4oWc/SDBHQ6XGvYoTOryXMkfUNbZJPM='
       - 'APP_DEBUG="false"'
       - 'APP_URL=http://example.com'
       - 'LOG_CHANNEL=stderr'
       - 'DB_CONNECTION=mysql'
       - 'DB_HOST=mysql'
       - 'DB_PORT="3306"'
       - 'DB_DATABASE="voting"'
       - 'DB_USERNAME="voting"'
       - 'DB_PASSWORD="voting"'
       - 'REDIS_HOST=redis'
       - 'REDIS_PASSWORD=""'
       - 'SESSION_DRIVER=redis'
       - 'SESSION_CONNECTION=session'
       - 'CACHE_DRIVER=redis'
       - 'MYSQL_ROOT_PASSWORD="voting"'
       - 'MYSQL_ALLOW_EMPTY_PASSWORD="voting"'
       - 'MYSQL_RANDOM_ROOT_PASSWORD="voting"'
    command: 'php artisan migrate --force'
    networks:
      - mynetwork
    depends_on:
      mysql:
        condition: service_healthy
  mysql:
    image: mysql:8
    command: '--default-authentication-plugin=mysql_native_password'
    restart: always
    ports:
      - '3306:3306'
    networks:
      - mynetwork
    environment:
       - 'APP_NAME=VoteApp'
       - 'APP_ENV=production'
       - 'APP_KEY=base64:WcIFQQUYOUUH4oWc/SDBHQ6XGvYoTOryXMkfUNbZJPM='
       - 'APP_DEBUG="false"'
       - 'APP_URL=http://example.com'
       - 'LOG_CHANNEL=stderr'
       - 'DB_CONNECTION=mysql'
       - 'DB_HOST=mysql'
       - 'DB_PORT="3306"'
       - 'DB_DATABASE="voting"'
       - 'DB_USERNAME="voting"'
       - 'DB_PASSWORD="voting"'
       - 'REDIS_HOST=redis'
       - 'REDIS_PASSWORD=""'
       - 'SESSION_DRIVER=redis'
       - 'SESSION_CONNECTION=session'
       - 'CACHE_DRIVER=redis'
       - 'MYSQL_ROOT_PASSWORD="voting"'
       - 'MYSQL_ALLOW_EMPTY_PASSWORD="voting"'
       - 'MYSQL_RANDOM_ROOT_PASSWORD="voting"'
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 --password="voting" --silent']
      interval: 3s
      retries: 5
      start_period: 30s
  nginx:
    image: nginx
    cap_drop:
      - ALL
    cap_add:
      - chown
      - dac_override
      - setgid
      - setuid
      - net_bind_service
    volumes:
      - './dkr-30/nginx/fastcgi.conf:/etc/nginx/fastcgi.conf'
      - type: bind
        source: ./dkr-30/nginx/nginx.conf
        target: /etc/nginx/conf.d/nginx.conf
        read_only: true
    networks:
      - mynetwork
    ports:
      - '80:80'
    environment:
       - 'APP_NAME=VoteApp'
       - 'APP_ENV=production'
       - 'APP_KEY=base64:WcIFQQUYOUUH4oWc/SDBHQ6XGvYoTOryXMkfUNbZJPM='
       - 'APP_DEBUG="false"'
       - 'APP_URL=http://example.com'
       - 'LOG_CHANNEL=stderr'
       - 'DB_CONNECTION=mysql'
       - 'DB_HOST=mysql'
       - 'DB_PORT="3306"'
       - 'DB_DATABASE="voting"'
       - 'DB_USERNAME="voting"'
       - 'DB_PASSWORD="voting"'
       - 'REDIS_HOST=redis'
       - 'REDIS_PASSWORD=""'
       - 'SESSION_DRIVER=redis'
       - 'SESSION_CONNECTION=session'
       - 'CACHE_DRIVER=redis'
       - 'MYSQL_ROOT_PASSWORD="voting"'
       - 'MYSQL_ALLOW_EMPTY_PASSWORD="voting"'
       - 'MYSQL_RANDOM_ROOT_PASSWORD="voting"'
    depends_on:
      - voting
  redis:
    image: redis:latest
    ports: 
     - '8004:8004'
    networks:
      - mynetwork
      
      
      
networks:
   mynetwork:
    driver: bridge
    name: network
 
